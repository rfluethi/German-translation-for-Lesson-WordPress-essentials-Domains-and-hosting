name: Create Release with LFS Files

on:
  release:
    types: [created]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  create-release-zips:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true

      # Alternative: Use git-lfs-action for proper LFS handling
      - name: Download LFS files using git-lfs-action
        uses: nschloe/action-cached-lfs-checkout@v1
        with:
          include: "*"

      # Verify LFS files are downloaded
      - name: Verify LFS files
        run: |
          echo "=== Verifying LFS files ==="
          
          # Check specific large file
          if [ -f "media/video/video-v-0-02-00.mp4" ]; then
            size=$(stat -c%s "media/video/video-v-0-02-00.mp4" 2>/dev/null || stat -f%z "media/video/video-v-0-02-00.mp4")
            echo "Main video file: $size bytes"
            
            if [ "$size" -lt 1000000 ]; then
              echo "ERROR: Video file too small - likely pointer file"
              echo "Content:"
              head "media/video/video-v-0-02-00.mp4"
              
              # Try manual download
              echo "Attempting manual LFS download..."
              curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                   -H "Accept: application/vnd.git-lfs+json" \
                   -L "https://api.github.com/repos/${{ github.repository }}/lfs/objects/batch" \
                   -d '{"operation":"download","transfers":["basic"],"objects":[{"oid":"$(git lfs ls-files | grep video-v-0-02-00.mp4 | cut -d' ' -f1)","size":$(stat -c%s media/video/video-v-0-02-00.mp4)}]}'
            else
              echo "SUCCESS: Video file downloaded correctly"
            fi
          else
            echo "ERROR: Main video file not found"
          fi

      # Create ZIP files
      - name: Create ZIP files
        run: |
          mkdir -p zip
          
          # Docs ZIP
          if [ -d "docs" ]; then
            zip -r zip/tutorial-docs.zip docs
            echo "Docs ZIP: $(du -h zip/tutorial-docs.zip | cut -f1)"
          fi
          
          # Assets ZIP
          if [ -d "src" ]; then
            zip -r zip/tutorial-assets.zip src
            echo "Assets ZIP: $(du -h zip/tutorial-assets.zip | cut -f1)"
          fi
          
          # Videos ZIP
          if [ -d "media" ]; then
            zip -r zip/tutorial-videos.zip media
            echo "Videos ZIP: $(du -h zip/tutorial-videos.zip | cut -f1)"
          fi
          
          # Complete ZIP
          zip -r zip/tutorial-complete.zip . -x '*.git*' 'zip/*'
          echo "Complete ZIP: $(du -h zip/tutorial-complete.zip | cut -f1)"

      # Show ZIP information
      - name: Show ZIP information
        run: |
          echo "=== ZIP Files Created ==="
          ls -lh zip/
          
          echo -e "\n=== ZIP Content Verification ==="
          for zip_file in zip/*.zip; do
            echo "=== $(basename $zip_file) ==="
            echo "Size: $(du -h $zip_file | cut -f1)"
            echo "Files with video extensions:"
            unzip -l "$zip_file" | grep -E '\.(mp4|avi|mov)' | head -3 || echo "No video files found"
            echo ""
          done

      # Upload to release
      - name: Upload to Release
        if: github.event_name == 'release'
        uses: softprops/action-gh-release@v1
        with:
          files: zip/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Upload as artifacts for testing
      - name: Upload as Artifacts
        if: github.event_name == 'workflow_dispatch'
        uses: actions/upload-artifact@v4
        with:
          name: release-zips
          path: zip/*.zip
