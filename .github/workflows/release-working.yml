name: Create Release with LFS Files (Working)

on:
  release:
    types: [created]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  create-release-zips:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository with LFS
        uses: actions/checkout@v4
        with:
          lfs: false  # We'll handle LFS manually
          
      - name: Download LFS files manually
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "=== Manual LFS Download ==="
          
          # Setup Git LFS
          git lfs install
          
          # Configure Git with authentication
          git config credential.helper store
          echo "https://x-access-token:$GITHUB_TOKEN@github.com" > ~/.git-credentials
          
          # Set environment to ensure LFS files are downloaded
          export GIT_LFS_SKIP_SMUDGE=0
          
          # Download all LFS files
          echo "Downloading LFS files..."
          git lfs pull --include="*"
          
          # Verify critical files
          echo "=== Verification ==="
          if [ -f "media/video/video-v-0-02-00.mp4" ]; then
            size=$(stat -c%s "media/video/video-v-0-02-00.mp4" 2>/dev/null || stat -f%z "media/video/video-v-0-02-00.mp4")
            echo "Main video: $size bytes"
            
            if [ "$size" -lt 1000000 ]; then
              echo "ERROR: File too small, trying alternative method..."
              
              # Alternative: Clone fresh with LFS
              cd /tmp
              git clone --depth 1 https://x-access-token:$GITHUB_TOKEN@github.com/${{ github.repository }}.git fresh-clone
              cd fresh-clone
              git lfs install
              git lfs pull
              
              # Copy the file back
              if [ -f "media/video/video-v-0-02-00.mp4" ]; then
                cp "media/video/video-v-0-02-00.mp4" "$GITHUB_WORKSPACE/media/video/"
                echo "Copied file from fresh clone"
              fi
              
              cd "$GITHUB_WORKSPACE"
            fi
          fi
          
          # Final verification
          if [ -f "media/video/video-v-0-02-00.mp4" ]; then
            final_size=$(stat -c%s "media/video/video-v-0-02-00.mp4" 2>/dev/null || stat -f%z "media/video/video-v-0-02-00.mp4")
            echo "Final video file size: $final_size bytes"
            
            if [ "$final_size" -lt 1000000 ]; then
              echo "CRITICAL ERROR: Could not download video file properly"
              echo "File content:"
              head "media/video/video-v-0-02-00.mp4"
              exit 1
            else
              echo "SUCCESS: Video file downloaded correctly"
            fi
          fi

      - name: Create ZIP files
        run: |
          mkdir -p zip
          
          echo "=== Creating ZIP files ==="
          
          # Create individual ZIPs
          if [ -d "docs" ] && [ "$(ls -A docs)" ]; then
            zip -r zip/tutorial-docs.zip docs
            echo "Created docs ZIP: $(du -h zip/tutorial-docs.zip | cut -f1)"
          fi
          
          if [ -d "src" ] && [ "$(ls -A src)" ]; then
            zip -r zip/tutorial-assets.zip src
            echo "Created assets ZIP: $(du -h zip/tutorial-assets.zip | cut -f1)"
          fi
          
          if [ -d "media" ] && [ "$(ls -A media)" ]; then
            zip -r zip/tutorial-videos.zip media
            echo "Created videos ZIP: $(du -h zip/tutorial-videos.zip | cut -f1)"
          fi
          
          # Complete project ZIP
          zip -r zip/tutorial-complete.zip . -x '*.git*' 'zip/*' '.DS_Store'
          echo "Created complete ZIP: $(du -h zip/tutorial-complete.zip | cut -f1)"
          
          echo "=== All ZIP files created ==="
          ls -lh zip/

      - name: Verify ZIP contents
        run: |
          echo "=== ZIP Content Verification ==="
          for zip_file in zip/*.zip; do
            echo "=== $(basename $zip_file) ==="
            echo "Total size: $(du -h $zip_file | cut -f1)"
            
            # Check for video files
            video_files=$(unzip -l "$zip_file" | grep -E '\.(mp4|avi|mov)' | wc -l)
            echo "Video files: $video_files"
            
            if [ "$video_files" -gt 0 ]; then
              echo "Video files found:"
              unzip -l "$zip_file" | grep -E '\.(mp4|avi|mov)' | head -3
            fi
            
            echo "Total files: $(unzip -l "$zip_file" | tail -1 | awk '{print $2}')"
            echo ""
          done

      - name: Upload to Release
        if: github.event_name == 'release'
        uses: softprops/action-gh-release@v1
        with:
          files: zip/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload as Artifacts
        if: github.event_name == 'workflow_dispatch'
        uses: actions/upload-artifact@v4
        with:
          name: release-zips
          path: zip/*.zip
